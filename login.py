# -*- coding: utf-8 -*-
"""Login.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LgLtD9zgAv5Ww3ewoZQz2T4tXwpTveOr
"""

import streamlit as st

# Dummy user data (you can replace this with a database)
USERS = {
    "admin": {"password": "admin123", "role": "Admin"},
    "moderator": {"password": "mod123", "role": "Moderator"},
    "student": {"password": "stud123", "role": "Student"},
}

# Initialize session state for authentication
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False
    st.session_state.role = None


# Function to render the Admin Dashboard
def admin_dashboard():
    st.title("Admin Dashboard")
    st.write("Welcome, Admin! Here you can manage the entire application.")
    # Add more admin-specific functionality here


# Function to render the Moderator Dashboard
def moderator_dashboard():
    st.title("Moderator Dashboard")
    st.write("Welcome, Moderator! Here you can review and moderate content.")
    # Add more moderator-specific functionality here


# Function to render the Student Dashboard
def student_dashboard():
    st.title("Student Dashboard")
    st.write("Welcome, Student! Here you can view your analytics and content.")
    # Add more student-specific functionality here


# Login Form
if not st.session_state.logged_in:
    st.title("Login")

    username = st.text_input("Username")
    password = st.text_input("Password", type="password")
    role = st.selectbox("Select Role", ["Admin", "Moderator", "Student"])

    if st.button("Login"):
        # Authenticate user
        if username in USERS:
            user = USERS[username]
            if password == user["password"] and role == user["role"]:
                st.session_state.logged_in = True
                st.session_state.role = user["role"]
                st.success(f"Logged in as {role}!")
            else:
                st.error("Invalid credentials or role.")
        else:
            st.error("User not found.")

# Render the appropriate dashboard
if st.session_state.logged_in:
    st.sidebar.title("Navigation")
    if st.sidebar.button("Logout"):
        st.session_state.logged_in = False
        st.session_state.role = None
        st.experimental_rerun()

    # Show dashboard based on role
    if st.session_state.role == "Admin":
        admin_dashboard()
    elif st.session_state.role == "Moderator":
        moderator_dashboard()
    elif st.session_state.role == "Student":
        student_dashboard()